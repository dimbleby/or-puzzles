[project]
name = "or-puzzles"
version = "0.1.0"
description = "Some puzzles solved using ortools"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "ortools>=9.10.4067",
]

[project.scripts]
alphabet = "or_puzzles:alphabet.solve_puzzle"
board = "or_puzzles:board.main"
day31 = "or_puzzles:day31.solve"
nonogram = "or_puzzles:nonogram.main"
puzzle = "or_puzzles:puzzle.solve_puzzle"
security-through-obscurity = "or_puzzles:security_through_obscurity.solve"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
  "ruff>=0.5.6",
  "mypy>=1.11.1",
]

[tool.mypy]
files = "."
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
show_error_codes = true
strict = true

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "C90",    # mccabe
  "COM",    # flake8-commas
  "D",      # pydocstyle
  "ERA",    # eradicate
  "PD",     # pandas-vet
  "PLR",    # pylint-refactor
  "T20",    # flake8-print
  "ANN401", # any-type
  "E203",   # whitespace before ':'
  "S101",   # assert-used
]
extend-safe-fixes = [
  "TCH", # flake8-type-checking
]
unfixable = [
  "F841", # unused-variable
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
